function next_scroll_gallery() {
  document.querySelectorAll(".nb-scroll-gallery").forEach((gallery) => {
    gallery.removeAttribute("data-flickering");
    var imagesLength = gallery.querySelectorAll(
      ".nb-scroll-gallery__image"
    ).length;
    var imageMap = gallery.querySelector(".nb-scroll-gallery__preview");
    var fullSizeContainer = gallery.querySelector(".nb-scroll-gallery__images");
    var imageThumbnails = gallery.querySelectorAll(
      ".nb-scroll-gallery__thumbnail"
    );
    var imagePath = gsap.utils.toArray(
      gallery.querySelectorAll(".nb-scroll-gallery__image")
    );
    var randomMarginThumbnails = parseFloat(
      gallery.getAttribute("data-random-margin-thumbnails")
    );
    var randomMarginImages = parseFloat(
      gallery.getAttribute("data-random-margin-images")
    );
    function getRandomLeft() {
      var values = [
        -randomMarginThumbnails,
        -randomMarginThumbnails / 2,
        0,
        randomMarginThumbnails / 2,
        randomMarginThumbnails,
      ];
      return values[Math.floor(Math.random() * values.length)] + "px";
    }
    function getRandomLeftForImages() {
      var values = [
        -randomMarginImages,
        -randomMarginImages / 2,
        0,
        randomMarginImages / 2,
        randomMarginImages,
      ];
      return values[Math.floor(Math.random() * values.length)] + "px";
    }
    let activeThumbnail = null;
    imagePath.forEach((el, ind) => {
      var randomLeft = getRandomLeft(),
        thumbnailDiv = imageThumbnails[ind];
      thumbnailDiv.style.left = randomLeft;
      el.style.left = getRandomLeftForImages();
      thumbnailDiv.addEventListener("click", () => {
        scrollToImage(el);
      });
      thumbnailDiv.addEventListener("keydown", (event) => {
        if (event.key === "Enter") {
          scrollToImage(el);
        }
      });
      ScrollTrigger.create({
        trigger: el,
        start: gallery.getAttribute("data-start"),
        end: gallery.getAttribute("data-end"),
        onToggle: (self) => {
          if (self.isActive) {
            if (activeThumbnail && activeThumbnail !== thumbnailDiv) {
              animateThumbnail(activeThumbnail, !1);
            }
            animateThumbnail(thumbnailDiv, !0);
            activeThumbnail = thumbnailDiv;
          } else if (activeThumbnail === thumbnailDiv) {
            animateThumbnail(thumbnailDiv, !1);
          }
        },
      });
    });
    imageThumbnails[0].classList.add("nb-scroll-gallery__thumbnail--active");
    activeThumbnail = imageThumbnails[0];
    function animateThumbnail(thumbnail, isActive) {
      if (isActive) {
        thumbnail.classList.add("nb-scroll-gallery__thumbnail--active");
      } else {
        thumbnail.classList.remove("nb-scroll-gallery__thumbnail--active");
      }
    }
    function scrollToImage(el) {
      const imageRect = el.getBoundingClientRect();
      const offsetTop = imageRect.top + window.pageYOffset;
      window.scrollTo({
        top: offsetTop - window.innerHeight / 2 + imageRect.height / 2,
        behavior: "smooth",
      });
    }
  });
}
document.addEventListener("DOMContentLoaded", function (t) {
  bricksIsFrontend && next_scroll_gallery();
});
