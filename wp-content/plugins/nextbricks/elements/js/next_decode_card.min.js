function next_decode_card() {
  class DecodeCard {
    constructor(cardInner, patternMotion, patternText, randomTextElement) {
      this.cardInner = cardInner;
      this.patternMotion = patternMotion;
      this.patternText = patternText;
      this.randomTextElement = randomTextElement;
      const card = this.cardInner.closest(".next-decode-card");
      this.characters = card.dataset.characters;
      this.textLength = parseFloat(card.dataset.textLength);
      this.gradientSize = parseFloat(card.dataset.gradientSize);
      this.randomTextElement.textContent = this.generateRandomString(
        this.textLength
      );
      this.cardInner.addEventListener(
        "mousemove",
        this.handleMouseMove.bind(this)
      );
    }
    generateRandomString(length) {
      let result = "";
      for (let i = 0; i < length; i++) {
        result += this.characters.charAt(
          Math.floor(Math.random() * this.characters.length)
        );
      }
      return result;
    }
    handleMouseMove(e) {
      const rect = this.cardInner.getBoundingClientRect();
      const mouseX = e.clientX - rect.left;
      const mouseY = e.clientY - rect.top;
      const maskImage = `radial-gradient(${this.gradientSize}px at ${mouseX}px ${mouseY}px, white, transparent)`;
      this.patternMotion.style.maskImage = maskImage;
      this.patternMotion.style.webkitMaskImage = maskImage;
      this.patternText.style.maskImage = maskImage;
      this.patternText.style.webkitMaskImage = maskImage;
      this.randomTextElement.textContent = this.generateRandomString(
        this.textLength
      );
    }
  }
  document.querySelectorAll(".next-decode-card").forEach((card) => {
    const cardInner = card.querySelector(".next-decode-card__inner");
    const patternMotion = card.querySelector(
      ".next-decode-card__pattern-motion"
    );
    const patternText = card.querySelector(".next-decode-card__pattern-text");
    const randomTextElement = card.querySelector(
      ".next-decode-card__random-text"
    );
    new DecodeCard(cardInner, patternMotion, patternText, randomTextElement);
  });
}
document.addEventListener("DOMContentLoaded", function (t) {
  bricksIsFrontend && next_decode_card();
});
