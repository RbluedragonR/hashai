function next_focus_nav() {
  document.querySelectorAll(".nb-focus-nav").forEach((nav) => {
    nav.removeAttribute("data-flickering");
    const menuItems = nav.querySelectorAll(".nb-focus-nav__item");
    const cornersContainer = nav.querySelector(".nb-focus-nav__corners");
    const corners = nav.querySelectorAll(".nb-focus-nav__corner");
    const displayDuration = parseFloat(
      nav.getAttribute("data-display-duration")
    );
    const displayEase = nav.getAttribute("data-display-ease");
    const displayStagger = parseFloat(nav.getAttribute("data-display-stagger"));
    const morphingDuration = parseFloat(
      nav.getAttribute("data-morphing-duration")
    );
    const morphingEase = nav.getAttribute("data-morphing-ease");
    const event = nav.getAttribute("data-event");
    if (nav.getAttribute("data-page-name")) {
      menuItems.forEach((item) => {
        if (item.textContent === nav.getAttribute("data-page-name")) {
          item.classList.add("nb-focus-nav__item--active");
        }
      });
    } else {
      const activeItem = parseFloat(nav.getAttribute("data-active-item"));
      menuItems.forEach((item, index) => {
        if (index + 1 === activeItem) {
          item.classList.add("nb-focus-nav__item--active");
        }
      });
    }
    function animateCorners(item) {
      const linkRect = item.getBoundingClientRect();
      const containerRect = nav.getBoundingClientRect();
      gsap.to(cornersContainer, {
        opacity: 1,
        top: linkRect.top - containerRect.top,
        left: linkRect.left - containerRect.left,
        width: linkRect.width,
        height: linkRect.height,
        duration: morphingDuration,
        ease: morphingEase,
      });
      gsap.to(corners, {
        opacity: 1,
        scale: 1,
        rotation: 0,
        duration: displayDuration,
        stagger: displayStagger,
        ease: displayEase,
      });
    }
    menuItems.forEach((item) => {
      if (event === "hover") {
        item.addEventListener("mouseenter", () => {
          animateCorners(item);
        });
        item.addEventListener("mouseleave", () => {
          const isHoveringAnyItem = [...menuItems].some((menuItem) =>
            menuItem.matches(":hover")
          );
          if (!isHoveringAnyItem) {
            gsap.to(corners, {
              opacity: 0,
              scale: 0,
              duration: displayDuration,
              stagger: displayStagger,
              ease: displayEase,
            });
            gsap.to(cornersContainer, {
              opacity: 0,
              duration: displayDuration,
            });
          }
        });
      } else if (event === "click") {
        item.addEventListener("click", () => {
          menuItems.forEach((menuItem) => {
            menuItem.classList.remove("nb-focus-nav__item--active");
          });
          item.classList.add("nb-focus-nav__item--active");
          animateCorners(item);
        });
      }
    });
    gsap.set(cornersContainer, { opacity: 0 });
    gsap.set(corners, { opacity: 0, scale: 0 });
  });
}
document.addEventListener("DOMContentLoaded", function (t) {
  bricksIsFrontend && next_focus_nav();
});
