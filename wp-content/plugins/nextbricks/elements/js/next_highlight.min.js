function next_highlight() {
  class HighlightEffect {
    constructor(el) {
      this.highlightedElement = el;
      this.selectMarker = this.highlightedElement.querySelector(
        ".nb-highlight__selectors"
      );
      var start = this.highlightedElement.getAttribute("data-start");
      var toggleActions =
        this.highlightedElement.getAttribute("data-toggleActions");
      var duration = parseFloat(
        this.highlightedElement.getAttribute("data-duration")
      );
      var delay = parseFloat(
        this.highlightedElement.getAttribute("data-delay")
      );
      var ease = this.highlightedElement.getAttribute("data-ease");
      var varContainerAnimation = isInsideHorizontalScrollElement(
        this.highlightedElement
      );
      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: this.highlightedElement,
          start: start,
          toggleActions: toggleActions,
          containerAnimation: varContainerAnimation
            ? window[varContainerAnimation]
            : undefined,
        },
      });
      tl.to(this.selectMarker, {
        duration: duration,
        delay: delay,
        ease: ease,
        "--select-width": getComputedStyle(
          this.highlightedElement
        ).getPropertyValue("--select-width-final"),
      });
      var y = this.highlightedElement.closest(".bc-core-menu");
      if (y && y.contains(this.highlightedElement)) {
        var v = y.querySelector(".bc-core-burguer").querySelector("button");
        tl.pause(!0);
        new MutationObserver(function (e) {
          for (var t of e)
            "attributes" === t.type &&
              ("true" === v.getAttribute("aria-expanded") ? f() : A());
        }).observe(v, { attributes: !0 });
      }
      function f() {
        tl.isActive() ? tl.play() : tl.restart();
      }
      function A() {
        tl.reverse();
      }
    }
  }
  var isBricks = window.location.href.includes("brickspreview");
  document.querySelectorAll(".nb-highlight__mark").forEach((highlight) => {
    highlight.removeAttribute("data-flickering");
    if (
      isBricks &&
      highlight.getAttribute("data-disable-builder").includes("1")
    ) {
      return;
    }
    new HighlightEffect(highlight);
  });
}
function isInsideHorizontalScrollElement(element) {
  let containerName = null;
  document
    .querySelectorAll(".next-horizontal-scroll")
    .forEach((horizontalScroll, index) => {
      if (horizontalScroll.contains(element)) {
        containerName = `NextHorizontalScroll${index}`;
      }
    });
  return containerName;
}
document.addEventListener("DOMContentLoaded", function (t) {
  if (!document.querySelector(".nb-site-loader")) {
    bricksIsFrontend && next_highlight();
  } else {
    document.querySelectorAll(".nb-highlight__mark").forEach((r) => {
      if (isInsideHorizontalScrollElement(r) || r.closest(".bc-core-menu")) {
        r.removeAttribute("data-flickering");
      }
    });
  }
});
